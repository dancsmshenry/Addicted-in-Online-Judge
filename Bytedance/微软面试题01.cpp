// 有一颗二叉树，只有两种节点，第一种节点是它有两个叶子节点，另一种节点就是它没有叶子节点，即它
// 本身就是叶子节点
// 所有的非叶子节点标记为N，叶子节点标记为L
// 最后给你一个前序遍历
// 如 N N L L L
// 要求你把二叉树重构会原来的样子
// 解答：发现NLL是一个小的二叉树
// 于是可以用栈来解答
// 比如说上面的 N N L L L
// 将中间的NLL变为一棵树，然后放回栈中变为一个L
// 栈就变成了N L L了
// 即可以一直这样收缩下去